name: ci

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
  
  mypy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
  
  pypi:
    runs-on: ubuntu-latest
    needs: [test, mypy]
    if: ${{ github.event_name == 'push' && ( contains(github.ref, '/tags/v') || contains(github.ref, 'refs/heads/main') ) }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2
    # Check if the _last_ commit bumped the version
    - name: Check for version bump
      id: check
      run: |
        poetry_version() { awk '/^\s*$/{f=0};f{if ($1=="version") {gsub(/"/, "", $3); print($3)}};/\[tool\.poetry\]/{f=1}'; }
        echo "::set-output name=previous::$(git show HEAD^:pyproject.toml | poetry_version)"
        echo "::set-output name=current::$(git show HEAD:pyproject.toml | poetry_version)"
    - name: Create tag
      uses: actions/github-script@v3
      if: ${{ !contains(github.ref, '/tags/v') && (steps.check.outputs.current != steps.check.outputs.previous) }}
      with:
        github-token: ${{ github.token }}
        script: |
          console.log(context)
          console.log(github.ref)
          if ('${{steps.check.outputs.current}}' != '${{steps.check.outputs.previous}}' && !contains(github.ref, '/tags/v')) {
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/v${{steps.check.outputs.current}}",
              sha: context.sha
            })
          }
    - id: tag
      uses: dawidd6/action-get-tag@v1.0.0
      if: ${{ always() && contains(github.ref, '/tags/v') }}
    - name: Verify tag matches version
      if: ${{ always() && contains(github.ref, '/tags/v') }}
      run: |
        [ v${{steps.check.outputs.current}} = "${{steps.tag.outputs.tag}}" ] || (echo "tag does not match version: "${{steps.tag.outputs.tag}}" != version v${{steps.check.outputs.current}}" && false)
    - uses: actions/setup-python@v2
      if: ${{ always() && (contains(github.ref, '/tags/v') || (steps.check.outputs.current != steps.check.outputs.previous)) }}
      with:
        python-version: 3.9
    - name: follow-on
      run: echo "do i get skipped?"
    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade poetry
    #     poetry install
    
    # - run: |
    #     poetry config repositories.testpypi https://test.pypi.org/legacy/
    #     poetry publish -n --build
    #   env:
    #     POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
    #     POETRY_PYPI_TOKEN_TESTPYPI: ${{ secrets.PYPI_TEST_API_TOKEN }}
