name: ci

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - master

jobs:
  
  pypi:
    runs-on: ubuntu-latest
    # run only on pushes, not PRs
    if: ${{ github.event_name == 'push' && github.base_ref == null }}

    steps:
    - uses: actions/setup-node@v2
      with:
        node-version: 14
    - run: npm install toml@3.0.0
    - name: Check for version bump
      id: check
      uses: actions/github-script@v4
      with:
        github-token: ${{ github.token }}
        debug: true
        script: |
          const toml = require('toml')
          async function getVersion(ref) {
            response = await github.repos.getContent({
              repo: context.repo.repo,
              owner: context.repo.owner,
              path: 'pyproject.toml',
              ref: ref
            });
            return toml.parse(Buffer.from(response.data.content, 'base64').toString())
              .tool
              .poetry
              .version;
          }
          before = await getVersion(context.payload.before);
          after = await getVersion(context.payload.after);
          ref = `refs/tags/v${after}`
          is_main = context.payload.ref === `refs/heads/${context.payload.repository.default_branch}`

          let release = context.payload.ref === ref;
          if (is_main && !tagged && before !== after) {
            let response = await github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref,
              sha: context.sha
            });
            console.log(response);
            release = true;
          }

          return {release};
    - name: Dump ref
      run: echo ${{ steps.check.outputs.result }}
    - name: do not release
      if: ${{ !fromJSON(steps.check.outputs.result).release }}
      run: echo "did not release"
  